function isDP() { var argument = getUrlParam('dp') ? getUrlParam('dp') : ''; if (!argument) { argument = $.cookie("CO2017_DomainPrefix") ? $.cookie("CO2017_DomainPrefix") : '' }; if (!argument) { var arrHost = window.location.hostname.split('.'); if (!checkValIsUndefinedOrNull(arrHost) && arrHost.length > 3) { return "co" } else { return false } }; return argument }; function GteTable(objectId, url, columnData, paramsData, idField, showPagination, rownumbers, rowStyler) { if (showPagination == undefined) { showPagination = true }; if (rownumbers == undefined) { rownumbers = true }; if (checkValIsUndefinedOrNull(rowStyler)) { rowStyler = function (index, row) { } } var dtd = $.Deferred(); $(objectId).datagrid({ loadMsg: '正在加载数据，请稍等......', emptyMsg: "<span>暂无数据</span>", url: url, method: 'POST', queryParams: paramsData, lines: true, idField: idField, striped: true, fitColumns: true, rownumbers: rownumbers, pagination: showPagination, pageNumber: 1, nowrap: false, pageSize: 20, showFooter: true, checkOnSelect: true, columns: columnData, singleSelect: false, selectOnCheck: true, scrollbarSize: 0, rowStyler: rowStyler, onLoadSuccess: function (data) { if (data && !data.isSuccess) { if (console && console.error) { console.error("错误代码：" + (data.errorCode || "") + "，错误消息：" + (data.message || "")) } } $(window).resize(); dtd.resolve(data) }, onLoadError: function (data) { if (console && console.error) { console.error(data) }; dtd.reject(data) } }); $(objectId).datagrid('getPager').pagination({ showPageList: false, beforePageText: '当前是第', afterPageText: '页，共{pages}页', displayMsg: '当前显示从第{from}条到{to}条，共{total}条记录' }); $(objectId).datagrid("clearSelections"); return dtd.promise() }; function GteTable1(objectId, columnData) { $(objectId).datagrid({ loadMsg: '正在加载数据，请稍等......', lines: true, idField: idField, striped: true, fitColumns: true, rownumbers: rownumbers, pagination: showPagination, nowrap: false, pageSize: paramsData.length, showFooter: true, checkOnSelect: true, columns: columnData, singleSelect: false, selectOnCheck: true, scrollbarSize: 0 }) }; function pagerFilter(data) { if (typeof data.length == 'number' && typeof data.splice == 'function') { data = { total: data.length, rows: data } } var dg = $(this); var opts = dg.datagrid('options'); var pager = dg.datagrid('getPager'); pager.pagination({ onSelectPage: function (pageNum, pageSize) { opts.pageNumber = pageNum; opts.pageSize = pageSize; pager.pagination('refresh', { pageNumber: pageNum, pageSize: pageSize }); dg.datagrid('loadData', data) } }); if (!data.originalRows) { data.originalRows = (data.rows) } var start = (opts.pageNumber - 1) * parseInt(opts.pageSize); var end = start + parseInt(opts.pageSize); data.rows = (data.originalRows.slice(start, end)); return data }; function GteTableJson(objectId, columnData, json, fitColumns, rownumbers, rowStyler, pageSize, isFagerFilter) { if (checkValIsUndefinedOrNull(rowStyler)) { rowStyler = function (index, row) { } } if (fitColumns == undefined) { fitColumns = true }; if (rownumbers == undefined) { rownumbers = false }; $(objectId).datagrid({ loadMsg: '正在加载数据，请稍等......', lines: true, striped: true, fitColumns: fitColumns, rownumbers: rownumbers, nowrap: false, showFooter: true, checkOnSelect: true, columns: columnData, singleSelect: false, selectOnCheck: true, rowStyler: rowStyler, scrollbarSize: 0, pagination: pageSize > 0 ? true : false, pageNumber: 1, pageSize: pageSize || 20, onLoadSuccess: function (data) { $(window).resize() }, }); if (isFagerFilter) { $(objectId).datagrid({ loadFilter: pagerFilter }).datagrid('loadData', json); $(objectId).datagrid('getPager').pagination({ showPageList: false, beforePageText: '当前是第', afterPageText: '页，共{pages}页', displayMsg: '当前显示从第{from}条到{to}条，共{total}条记录' }) } else { $(objectId).datagrid('loadData', json) } }; function reloadTable(title, listID) { if (!checkValIsUndefinedOrNull(title) && !checkValIsUndefinedOrNull(listID) && window.parent.reloadTable) { window.parent.reloadTable(title, listID) } }; function refreshTableList(title, listID) { if ($('table#' + listID).length > 0) { $('#' + listID).datagrid("clearSelections"); $("#" + listID).datagrid('reload') } else { refreshTab(title) } }; function AcademiesAndSpecialties(a, b) { if (typeof (AcademiesAndSpecialtiesBox) == 'function') { AcademiesAndSpecialtiesBox(a, b) } else { return false } }; function delete_confrim(messgeid, gridid, index, key, show, del_fun) { var grid = $("#" + gridid); var rows = grid.datagrid("getData").rows; var title = ""; if (show != "") { title = "(" + rows[index][show] + ")" }; var message_str = "您是否要删除此数据" + title + "？"; var box = $("#" + messgeid); box.text(message_str); box.dialog({ title: '删除', modal: true, top: 50, buttons: [{ text: '确定', handler: function () { if (del_fun != undefined) { del_fun(rows[index][key]); $(box).dialog('close') } } }, { text: '取消', handler: function () { $(box).dialog('close'); grid.datagrid("clearSelections") } }] }); box.dialog('open').window('center') }; function show_confrim(messgeid, messge, gridid, index, key, show, del_fun) { var grid = $("#" + gridid); var rows = grid.datagrid("getData").rows; var title = ""; if (show != "") { title = "(" + rows[index][show] + ")" }; var message_str = "您确定要" + messge + "(" + title + ")？"; var box = $("#" + messgeid); box.text(message_str); box.dialog({ title: messge, modal: true, buttons: [{ text: '确定', handler: function () { if (del_fun != undefined) { del_fun(rows[index][key]); $(box).dialog('close') } } }, { text: '取消', handler: function () { $(box).dialog('close'); grid.datagrid("clearSelections") } }] }); box.dialog('open').window('center') }; function getid() { return $.ajax({ url: "../Handler/CommonHandler.ashx?action=GetSessionID", async: false, dataType: "text", type: "POST" }).responseText }; function openframe(title, url, one, listID) { if (window.parent.addTab != undefined) { if (!checkValIsUndefinedOrNull(url) && url.indexOf("prevTitle") < 0) { var curTitle = getCurrentTabTitle(); if (!checkValIsUndefinedOrNull(curTitle)) { if (url.indexOf("?") >= 0) { url += "&" } else { url += "?" }; url += "prevTitle=" + escape(curTitle) } }; window.parent.addTab(title, url, one) } else { var temp = url.indexOf('/'); var newurl = url.substring(temp + 1); window.open(newurl) } }; function quitTabsToLogin(message, successCallback) { if (self.frameElement && self.frameElement.tagName == "IFRAME") { if (message && successCallback) { window.parent.QuitTabsToLogin(message, successCallback) } } else { if (message && successCallback) { QuitTabsToLogin(message, successCallback) } } }; function getCurrentTab() { if (window.parent.getCurrentTab) { return window.parent.getCurrentTab() } else { return null } }; function getCurrentTabTitle() { var curTab = getCurrentTab(); var title = ""; if (curTab) { title = curTab.panel('options').title }; return title }; function refreshTab(title) { if (!checkValIsUndefinedOrNull(title) && window.parent.refreshTab) { window.parent.refreshTab(title) } }; function refreshTab2(tab) { if (tab && window.parent.refreshTab2) { window.parent.refreshTab2(tab) } }; function closeTab(title, id) { if (!checkValIsUndefinedOrNull(title) && window.parent.closeTab) { window.parent.closeTab(title, id) } }; function closeCurTab() { if (window.parent.closeCurTab) { window.parent.closeCurTab() } }; function download(url) { var temp = $("<div style='width:1px;height:1px;overflow:hiden;'><form id=\"frmExport\" name=\"frmExport\" method=\"post\" action=\"\"></form></div>"); $("body").append(temp); $("#frmExport").attr("action", url); $("#frmExport").submit() }; function downloadExcel(url, data) { if (checkValIsUndefinedOrNull(url)) { myMessage("出错了！") } else { var params = checkValIsUndefinedOrNull(data) ? '' : $.param(data); var url = url + (checkValIsUndefinedOrNull(params) ? "" : ("&" + params)); $('<form method="post" action="' + url + '"></form>').appendTo('body').submit().remove() } }; function downloadAttachent(id, type, listID) { $.ajax({ url: "../Handler/CommonHandler.ashx?action=GetAttachmentLink", dataType: "json", type: "POST", beforeSend: function () { open_loading() }, data: { "attID": id, "attType": type }, success: function (data) { if (data && data.isSuccess && !checkValIsUndefinedOrNull(data.message)) { downloadExcel(data.message); $('#' + (listID || 'list')).datagrid("clearSelections") } else { myMessage(data.message || '附件下载失败！') } }, error: function (err) { console.log(err) }, complete: function () { close_loading() } }) }; function getUrlParam(name) { var reg = new RegExp("(^|&)" + name + "=([^&]*)(&|$)"); var r = window.location.search.substr(1).match(reg); if (r != null) return unescape(r[2]); return null }; function getStringParam(url, name) { var reg = new RegExp("(^|&)" + name + "=([^&]*)(&|$)"); if (url.indexOf("?") > -1) { url = url.substring((url.indexOf("?") + 1)) }; var r = url.match(reg); if (r != null) return unescape(r[2]); return null }; function urlParams2Obj(params) { if (checkValIsUndefinedOrNull(params)) { return {} } var reg = /([^=&\s]+)[=\s]*([^&\s]*)/g; var obj = {}; while (reg.exec(params)) { obj[RegExp.$1] = RegExp.$2 } return obj }; function dateFormat(dateString, format) { if (!dateString) return ""; var dotIndex = dateString.indexOf("."); if (dotIndex > 0) { dateString = dateString.substring(0, dotIndex) }; if (format == null) format = "yyyy-MM-dd hh:mm"; var time = new Date($.trim(dateString.replace(/-/g, '/').replace(/T|Z/g, ' '))); var o = { "M+": time.getMonth() + 1, "d+": time.getDate(), "h+": time.getHours(), "m+": time.getMinutes(), "s+": time.getSeconds(), "q+": Math.floor((time.getMonth() + 3) / 3), "S": time.getMilliseconds() }; if (/(y+)/.test(format)) format = format.replace(RegExp.$1, (time.getFullYear() + "").substr(4 - RegExp.$1.length)); for (var k in o) { if (new RegExp("(" + k + ")").test(format)) { format = format.replace(RegExp.$1, (RegExp.$1.length == 1) ? (o[k]) : (("00" + o[k]).substr(("" + o[k]).length))) } } return format }; function checkValIsUndefinedOrNull(paramVal) { if (typeof (paramVal) == "number" || typeof (paramVal) == "boolean") { return false } else if (typeof (paramVal) == "undefined" || paramVal == "undefined" || paramVal == undefined) { return true } else if (paramVal == null || paramVal == "" || paramVal == "null") { return true }; return false }; function isNumber(data) { if (checkValIsUndefinedOrNull(data)) { return false } else { var reg = new RegExp("^[0-9]+$"); return reg.test(data) } }; function myMessage(message, successCallback, selfClosing) { var disabledBtn = $("input:button.formBtn,input:button.clearBtn"); if (self.frameElement && self.frameElement.tagName == "IFRAME") { if (disabledBtn.length > 0) { window.parent.MyMessage(message, successCallback, disabledBtn, selfClosing) } else { window.parent.MyMessage(message, successCallback, false, selfClosing) } } else { if (disabledBtn.length > 0) { MyMessage(message, successCallback, disabledBtn, selfClosing) } else { MyMessage(message, successCallback, false, selfClosing) } } }; function open_loading() { var box = $("#loadingbox"); if (box.html() == undefined || box.html() == "") { box = $('<div id="loadingbox" class="easyui-dialog" style="width:400px;height:200px;text-align: center;line-height: 130px;" data-options="closed:true,modal:true"><div>正在加载数据 ...</div></div>'); box.appendTo('body') }; $('#loadingbox').dialog({ title: '提示', closable: false }).dialog("open").window('center') }; function close_loading() { $("#loadingbox").dialog("close").remove() }; function UrlDecode(zipStr) { return decodeURIComponent(zipStr) }; function getProjectInformation(ktbh, type, flag) { if (checkValIsUndefinedOrNull(ktbh)) { ktbh = "" }; if (checkValIsUndefinedOrNull(type)) { type = "" }; $("body").on("mouseover", ".detadil_txt_right", function () { if ($(this).hasClass("proTitle")) { $(this).attr('title', $(this).find("span").text()) } else { $(this).attr('title', $(this).text()) } }); var FormSort = GetDocumentFormSort(3); var isShow = [false, false, false]; $.each(FormSort, function (i, v) { if (v['Element'] == 8) { if (v['IsShow'] == 1) { isShow[0] = true } } else if (v['Element'] == 9) { if (v['IsShow'] == 1) { isShow[1] = true } } else if (v['Element'] == 10) { if (v['IsShow'] == 1) { isShow[2] = true } } }); var proObj = {}; $.ajax({ url: "../Handler/Project.ashx?action=GetProjectStuInfo", data: { "ktbh": ktbh, "type": type, "flag": flag || 0 }, dataType: "json", type: "POST", async: false, beforeSend: function () { open_loading() }, success: function (data) { if (data && data.isSuccess && data.rows && data.rows.length > 0) { proObj["isTrue"] = true; var item = data.rows[0]; var html = '<div class="gxf_problem gxf_problem_detail"><div><h2><span></span>题目基本信息</h2></div><div class="gxf_pro_content gxf_content_table"><ul class="clearfix gxf_project_detadil_ul"><li style="width:100%;position: relative;padding: 0;padding-left: 120px;box-sizing: border-box;   -moz-box-sizing: border-box;-webkit-box-sizing: border-box;-o-box-sizing: border-box;-ms-box-sizing: border-box;"><div style="position: absolute;left: 0; width: 120px; text-align: right; line-height: 30px;"> 题目：</div><div style="width:100%;" class="detadil_txt_right proTitle">'; if (item["是否团队课题"] == 1) { if (item["团队类型"] == 1) { html += '<i class="TeamProjectTips" title="团队毕业设计论文总题目">总</i> ' } else { html += '<i class="TeamProjectTips" title="团队毕业设计论文子题目">子</i> ' } } html += '<span>' + item["课题题目"] + '</span></div></li>'; html += '<li><span class="detadil_txt_left"> 可选专业：</span><span class="detadil_txt_right">' + item["可选专业"] + '</span></li>'; html += '<li><span class="detadil_txt_left"> 题目申报时间：</span><span class="detadil_txt_right">' + item["课题申报时间"] + '</span></li>'; html += isShow[0] ? ('<li><span class="detadil_txt_left"> ' + (SetDictionary(7) || "题目类型") + '：</span><span class="detadil_txt_right">' + item["题目类型"] + '</span></li>') : ''; html += isShow[1] ? ('<li><span class="detadil_txt_left"> ' + (SetDictionary(8) || "题目来源") + '：</span><span class="detadil_txt_right">' + item["题目来源"] + '</span></li>') : ''; html += isShow[2] ? ('<li><span class="detadil_txt_left"> ' + (SetDictionary(17) || "成果形式") + '：</span><span class="detadil_txt_right">' + item["成果形式"] + '</span></li>') : ''; html += '<li><span class="detadil_txt_left"> 选择模式：</span><span class="detadil_txt_right">' + item["选择模式"] + '</span></li>'; html += '<li><span class="detadil_txt_left"> 题目所属专业：</span><span class="detadil_txt_right">' + item["课题面向专业"] + '</span></li>'; html += '<li><span class="detadil_txt_left"> 指导教师：</span><span class="detadil_txt_right">' + item["教师姓名"] + '</span></li>'; html += '<li><span class="detadil_txt_left"> 教师职称：</span><span class="detadil_txt_right">' + item["教师职称"] + '</span></li>'; html += '<li><span class="detadil_txt_left"> 导师联系邮箱：</span><span class="detadil_txt_right">' + item["教师邮箱"] + '</span></li>'; html += '<li><span class="detadil_txt_left"> 学生姓名：</span><span class="detadil_txt_right" >' + item["学生姓名"] + '</span></li>'; html += '<li><span class="detadil_txt_left"> 学生院系专业：</span><span class="detadil_txt_right">' + item["院系专业"] + '</span></li>'; if (item["第二导师"]) { html += '<li><span class="detadil_txt_left"> 第二导师：</span><span class="detadil_txt_right">' + item["第二导师"] + '</span></li>' }; html += '</ul></div>'; if (item["是否团队课题"] == 1) { html += '<div style="padding: 10px; border: 1px solid #ccc;  border-top: none; background-color: #fafafa"><span style="display: inline-block; width: 140px;text-align: right;">团队名称：</span><span style="display: inline-block; min-width: 230px;">' + (item["团队名称"] || "") + '</span><span style="display: inline-block; width: 140px;text-align: right;">第一指导教师：</span><span style="display: inline-block; min-width: 230px;">' + (item["第一指导导师"] || "") + '</span></div>' } html += '</div>'; proObj["xybh"] = item["课题学院"]; proObj["zybh"] = item["课题专业"]; proObj["kttm"] = item["课题题目"]; proObj["xgsq"] = item["修改申请"]; proObj["ktbh"] = item["课题编号"]; $("#gxf-project-information").html(html) } else { proObj["isTrue"] = false } }, error: function (Error) { console.log(Error) }, complete: function () { close_loading() } }); return proObj }; function getClertkInformation(answerGroupId) { if (checkValIsUndefinedOrNull(answerGroupId)) { answerGroupId = "" }; $("body").on("mouseover", ".detadil_txt_right", function () { $(this).attr('title', $(this).html()) }); $.ajax({ url: "../Handler/Answer.ashx?action=GetDetailAnswerGroupInfo", data: { "answerGroupId": answerGroupId }, dataType: "json", type: "POST", async: false, success: function (data) { if (data && data.isSuccess && data.rows && data.rows.length > 0) { var item = data.rows[0]; var obj = ""; if (!checkValIsUndefinedOrNull(item["答辩组教师"])) { if (item["答辩组教师"].indexOf("#cnki#") > -1) { $.each(item["答辩组教师"].split("#cnki#"), function (index, value) { obj += value.split("$")[0] + '；' }); obj = obj.substring(0, obj.length - 1) } else { obj += checkValIsUndefinedOrNull(item["答辩组教师"].split("$")[0]) ? "" : (item["答辩组教师"].split("$")[0] + '；') } } var html = '<div class="gxf_problem gxf_problem_detail"><div><h2><span></span>答辩组基本信息</h2></div><div class="gxf_pro_content gxf_content_table"><ul class="clearfix gxf_project_detadil_ul"><li><span class="detadil_txt_left"> 答辩组：</span><span class="detadil_txt_right">' + item["答辩组名称"] + '</span></li><li><span class="detadil_txt_left"> 答辩地点：</span><span class="detadil_txt_right">' + item["答辩地点"] + '</span></li><li><span class="detadil_txt_left"> 答辩时间：</span><span class="detadil_txt_right">' + item["答辩日期"] + '</span></li><li><span class="detadil_txt_left"> 答辩组组长：</span><span class="detadil_txt_right">' + item["答辩组长姓名"] + '</span></li><li><span class="detadil_txt_left"> 答辩组教师：</span><span class="detadil_txt_right">' + obj + '</span></li></ul></div></div>'; $("#clerk-information").html(html) } } }) }; function getProjectDocumentsTableList(SID, ProjectId, list, flag) { GteTable(list || $("#list"), "../Handler/ReviewHandler.ashx?action=GetProjectMaterial", [[{ field: 'num', align: 'center', title: '序号', width: 10 }, { field: 'isExist', align: 'center', title: '是否已提交文档', width: 30, formatter: function (value, row, index) { return row['isExist'] == "是" ? ('<span class="txt_green">' + row['isExist'] + '</span>') : ('<span class="txt_red">' + row['isExist'] + '</span>') } }, { field: 'isAtt', align: 'center', title: '是否有附件', width: 30, formatter: function (value, row, index) { return row['isAtt'] == "是" ? ('<span class="txt_green">' + row['isAtt'] + '</span>') : ('<span class="txt_red">' + row['isAtt'] + '</span>') } }, { field: 'materialName', align: 'center', title: '材料名称', width: 70, formatter: function (value, row, index) { var str = null; if (row["isExist"] == "否") { str = row["materialName"] } else { if (row["operationType"] == "7") { str = '<a class="listA" href="javascript:;" onclick="openframe(\'' + SetDictionary(9) + '详情\', \'../Task/Details.html?id=' + row["projectId"] + '&taskId=' + row["operatedId"] + '&flag=' + (flag == 1 ? 1 : 0) + '\',false);">' + row["materialName"] + '</a>' } else if (row["operationType"] == "1") { str = '<a class="listA" href="javascript:;" onclick="openframe(\'' + SetDictionary(1) + '详情\', \'../Student/SubmitOpenReport.html?sid=' + row["studentId"] + '&id=' + row["projectId"] + '&submitid=' + row["operatedId"] + '&flag=' + (flag == 1 ? 1 : 0) + '\',false);">' + row["materialName"] + '</a>' } else if (row["operationType"] == "2") { str = '<a class="listA" href="javascript:;" onclick="openframe(\'' + SetDictionary(4) + '详情\', \'../Student/SubmitForeignLiterature.html?sid=' + row["studentId"] + '&projectId=' + row["projectId"] + '&ID=' + row["operatedId"] + '&flag=' + (flag == 1 ? 1 : 0) + '\',false);">' + row["materialName"] + '</a>' } else if (row["operationType"] == "29") { str = '<a class="listA" href="javascript:;" onclick="openframe(\'' + SetDictionary(16) + '详情\', \'../Student/WritingRecordCardrHistory.html?sid=' + row["studentId"] + '&ProjectId=' + row["projectId"] + '&LogID=' + row["operatedId"] + '&flag=' + (flag == 1 ? 1 : 0) + '\',false);">' + row["materialName"] + '</a>' } else if (row["operationType"] == "3") { str = '<a class="listA" href="javascript:;" onclick="openframe(\'' + SetDictionary(3) + '详情\', \'../Student/ProjectLogHistoryRecord.html?sid=' + row["studentId"] + '&ProjectId=' + row["projectId"] + '&LogID=' + row["operatedId"] + '&flag=' + (flag == 1 ? 1 : 0) + '\',false);">' + row["materialName"] + '</a>' } else if (row["operationType"] == "4") { str = '<a class="listA" href="javascript:;" onclick="openframe(\'' + SetDictionary(6) + '详情\', \'../Thesis/ThesisHistory.html?sid=' + row["studentId"] + '&id=' + row["projectId"] + '&fileId=' + row["operatedId"] + '&flag=' + (flag == 1 ? 1 : 0) + '\',false);">' + row["materialName"] + '</a>'; if (row["downloadLinks"] && row["isExist"]) { str += '<a class="listA margl" target="view_window" href=' + row["downloadLinks"] + ' download="' + row["materialName"] + '原文">下载论文</a>' } } else if (row["operationType"] == "5") { str = '<a class="listA" href="javascript:;" onclick="openframe(\'' + SetDictionary(2) + '详情\', \'../Student/SubmitMiddleReport.html?sid=' + row["studentId"] + '&id=' + row["projectId"] + '&submitid=' + row["operatedId"] + '&flag=' + (flag == 1 ? 1 : 0) + '\',false);">' + row["materialName"] + '</a>' } else if (row["operationType"] == "10") { str = '<a class="listA" href="javascript:;" onclick="openframe(\'' + SetDictionary(5) + '详情\', \'../Student/SubmitLiteratureReview.html?sid=' + row["studentId"] + '&id=' + row["projectId"] + '&submitid=' + row["operatedId"] + '&flag=' + (flag == 1 ? 1 : 0) + '\',false);">' + row["materialName"] + '</a>' } else if (row["operationType"] == "26") { str = '<a class="listA" href="javascript:;" onclick="openframe(\'' + SetDictionary(10) + '详情\', \'../Student/SubmitEarlyCheck.html?sid=' + row["studentId"] + '&id=' + row["projectId"] + '&submitid=' + row["operatedId"] + '&flag=' + (flag == 1 ? 1 : 0) + '&opeType=26\',false);">' + row["materialName"] + '</a>' } else if (row["operationType"] == "27") { str = '<a class="listA" href="javascript:;" onclick="openframe(\'' + SetDictionary(11) + '详情\', \'../Student/StuPaperDraftList.html?sid=' + row["studentId"] + '&projectid=' + row["projectId"] + '&fileId=' + row["operatedId"] + '&flag=' + (flag == 1 ? 1 : 0) + '\',false);">' + row["materialName"] + '</a>'; if (row["downloadLinks"] && row["isExist"]) { str += '<a class="listA margl" target="view_window" href=' + row["downloadLinks"] + ' download="' + row["materialName"] + '原文">下载初稿</a>' } } } return str } }]], { studentId: SID, projectId: ProjectId }, "num", false, false) }; function initKindEditor(richTextId) { var htmlEditor = new Array(); if (htmlEditor.length > 0) { return }; var option = { items: ['preview', 'undo', 'redo', 'cut', 'copy', 'paste', 'plainpaste', 'wordpaste', '|', 'justifyleft', 'justifycenter', 'justifyright', 'justifyfull', 'insertorderedlist', 'insertunorderedlist', 'indent', 'outdent', 'subscript', 'superscript', '|', 'quickformat', 'selectall', 'fontname', 'fontsize', '|', 'forecolor', 'hilitecolor', 'bold', 'italic', 'underline', 'strikethrough', 'lineheight', 'removeformat', '|', 'image', 'multiimage', 'table', 'hr', 'link', 'unlink', 'jme'], height: '300px', minHeight: '300px', themeType: 'simple', resizeType: 1, resizeMode: 1, uploadJson: "../Handler/UploadOfKindEditorHandler.ashx", cssPath: '../Scripts/kindeditor/plugins/code/prettify.css', extraFileUploadParams: { action: "ReceiveImage", verifyUser: false }, filePostName: "Filedata", allowImageRemote: false, imageFileTypes: '*.jpg;*.jpeg;*.gif;*.png;*.bmp;', imageSizeLimit: '10MB', formatUploadUrl: false, filterMode: false, afterBlur: function () { this.sync(); KindEditor.ctrl(document, 13, function () { KindEditor('form[name=form1]')[0].submit() }); KindEditor.ctrl(this.edit.doc, 13, function () { KindEditor('form[name=form1]')[0].submit() }) }, afterChange: function () { $(this.edit.div).parent().siblings("p,h3").find(".writerText>i").html(" " + $(this.edit.doc.body).text().replace(/\s|\r|\n/g, "").length + " ") } }; $.each(richTextId, function (index, value) { htmlEditor[index] = KindEditor.create("#" + value, option) }); window.htmlEditor = htmlEditor }; var showWriteTextNumber = { createNew: function (divID, inputID) { $("#" + divID).keyup("#" + inputID, function () { $("#" + inputID).prev().find(".writerText>i").html(" " + $("#" + inputID).textbox("getText").replace(/\s|\r|\n/g, "").length + " ") }) } }; function verifyScore(value) { var reg = /[^0-9|^.]/; if (reg.test(value)) return false; reg = /((^[1-9][0-9]{0,2})(.[0-9])?)$|^0$|^0.0|^(0.[0-9]{1,1})$/; if (!reg.test(value)) return false; value = parseFloat(value).toFixed(1); return value >= 0.0 && value <= 100.0 }; function isShowAuditDiv(opeType, divID) { if (checkValIsUndefinedOrNull(opeType) || checkValIsUndefinedOrNull(divID)) { return } var isTrue = false; $.ajax({ url: "../Handler/AllocationAudit.ashx?action=isCustomAudit", type: "post", dataType: "json", async: false, data: { opeType: opeType }, success: function (data) { if (data && data.isSuccess) { isTrue = true; $(divID).show() } else { $(divID).hide() } }, error: function (err) { console.log(err) } }); return isTrue }; function lastCheckRole(typeData, opeId) { var checkrole; if (checkValIsUndefinedOrNull(checkrole)) { $.ajax({ url: "../Handler/CommonHandler.ashx?action=GetLastAuditorRole", data: { type: typeData, opeId: opeId || "" }, type: "POST", dataType: "json", async: false, success: function (data) { if (data.isSuccess) { checkrole = data.rows[0]["角色"] } }, error: function (err) { console.log(err) } }) }; return checkrole }; function isCanAddStuFile(SID, id, type, msgId, msgBoxId) { if (checkValIsUndefinedOrNull(type) || checkValIsUndefinedOrNull(msgId)) { if ($("#" + msgId).text().length > 0) { $("#" + msgId).append("<br /><span class='txt_red fontWeigt'>" + data.message + "</span>") } else { $("#" + msgId).append("<span class='txt_red fontWeigt'>" + data.message + "</span>") } $("#" + msgBoxId).show() } $.ajax({ url: "../Handler/CommonHandler.ashx?action=IsCanAddStuFile", data: { "SID": (SID || ""), "ktbh": (id || ""), "type": type }, dataType: "json", type: "POST", success: function (data) { if (!data.isSuccess) { if ($("#" + msgId).text().length > 0) { $("#" + msgId).append("<br /><span class='txt_red fontWeigt'>" + data.message + "</span>") } else { $("#" + msgId).append("<span class='txt_red fontWeigt'>" + data.message + "</span>") } $("#" + msgBoxId).show() } }, error: function (err) { console.log(err) } }) }; function isCanAddScore(SID, id, type, msgId, msgBoxId) { var rs = false; if (checkValIsUndefinedOrNull(type) || checkValIsUndefinedOrNull(msgId)) { if ($("#" + msgId).text().length > 0) { $("#" + msgId).append("<br /><span class='txt_red fontWeigt'>" + data.message + "</span>") } else { $("#" + msgId).append("<span class='txt_red fontWeigt'>" + data.message + "</span>") } $("#" + msgBoxId).show(); return false } $.ajax({ url: "../Handler/CommonHandler.ashx?action=IsCanAddStuFile", data: { "SID": (SID || ""), "ktbh": (id || ""), "type": type }, dataType: "json", async: false, type: "POST", success: function (data) { if (!data.isSuccess) { if ($("#" + msgId).text().length > 0) { $("#" + msgId).append("<br /><span class='txt_red fontWeigt'>" + data.message + "</span>") } else { $("#" + msgId).append("<span class='txt_red fontWeigt'>" + data.message + "</span>") } $("#" + msgBoxId).show(); rs = false } else { rs = true } }, error: function (err) { console.log(err); rs = false } }); return rs }; function showWeightDetail(projectId, sid, xybh) { $.ajax({ url: "../Handler/ReviewHandler.ashx?action=GetStudentScoringWeight2020", data: { stuAcademyNum: xybh, sid: sid, projectId: projectId }, dataType: "json", type: "POST", success: function (data) { if (data.isSuccess) { GteTableJson($("#stuList"), [[{ field: '成绩名称', align: 'center', title: '成绩名称', width: 250 }, { field: '权重', align: 'center', title: '权重', width: 224 }, { field: '是否计入总分', align: 'center', title: '是否计入总分', width: 150, formatter: function (value, row, index) { if (row['是否计入总分'] == 1) { return '<span class="txt_green">计入总分</span>' } else { return '<span class="txt_red">不计入总分</span>' } } },]], data.rows, false, '', function (index, row) { if (row['是否显示'] == 0 || row['成绩类型'] == 5 || row['成绩类型'] == 16) { return { class: 'disNone' } } }); $('#weightBox').dialog({ title: '查看权重' }).dialog("open").window('center'); var text = '该学生的'; $.each(data.rows, function (i, v) { if (v["是否显示"] == 1 && v["成绩类型"] != 5 && v["成绩类型"] != 16) { text += '“' + v["成绩名称"] + '”权重为：' + v["权重"] + '；' } }); $("#weight_detailes").text(text) } else { $("#weight_detailes").text(data.message) } } }) }; function rsaEncrypt(obj, publicKey) { try { if (checkValIsUndefinedOrNull(publicKey)) { return null } if (checkValIsUndefinedOrNull(obj)) { return "" } var inputText = ""; if (typeof (obj) == "object") { inputText = JSON.stringify(obj) } else { inputText = obj } var utf8Code = encodeUtf8(inputText); var jsRsa = new JSEncrypt(); jsRsa.setPublicKey(publicKey); var keySize = jsRsa.default_key_size; var bufferSize = (keySize / 8) - 11; var txtLen = utf8Code.length; var i = 0; var hexStr = ""; var encryptText = ""; var encryptLen = 0; while (i < txtLen) { var c = utf8Code[i]; encryptLen++; if (encryptLen <= bufferSize) { encryptText += String.fromCharCode(c); i++ } if (encryptLen > bufferSize || i >= txtLen) { var b64 = jsRsa.encrypt(encryptText); hexStr += jsRsa.b64ToHex(b64); encryptLen = 0; encryptText = "" } } var result = jsRsa.hexToB64(hexStr); return result } catch (ex) { if (console && console.error) { console.error(ex) } return null } }; function rsaEncryptWithChar(obj, publicKey) { try { if (checkValIsUndefinedOrNull(publicKey)) { return null } if (checkValIsUndefinedOrNull(obj)) { return "" } var inputText = ""; if (typeof (obj) == "object") { inputText = JSON.stringify(obj) } else { inputText = obj } var utf8Code = encodeUtf8(inputText); var jsRsa = new JSEncrypt(); jsRsa.setPublicKey(publicKey); var bufferSize = 100; var txtLen = utf8Code.length; var i = 0; var result = ""; var resultLen = 0; var encryptText = ""; var encryptLen = 0; while (i < txtLen) { var c = utf8Code[i]; encryptLen++; if (encryptLen <= bufferSize) { encryptText += String.fromCharCode(c); i++ } if (encryptLen > bufferSize || i >= txtLen) { var b64 = jsRsa.encrypt(encryptText); result += b64 + ","; resultLen += b64.length; encryptLen = 0; encryptText = "" } } if (result.length > 0) { result += resultLen.toString() } return result } catch (ex) { if (console && console.error) { console.error(ex) } return null } }; function encodeUtf8(text) { if (checkValIsUndefinedOrNull(text)) { return [] } var code = encodeURIComponent(text); var bytes = []; for (var i = 0; i < code.length; i++) { var c = code.charAt(i); if (c === '%') { var hex = code.charAt(i + 1) + code.charAt(i + 2); var hexVal = parseInt(hex, 16); bytes.push(hexVal); i += 2 } else { bytes.push(c.charCodeAt(0)) } } return bytes }; function decodeUtf8(bytes) { if (checkValIsUndefinedOrNull(bytes) || bytes.length <= 0) { return "" } var encoded = ""; for (var i = 0; i < bytes.length; i++) { encoded += '%' + bytes[i].toString(16) } var result = decodeURIComponent(encoded); return result }; function getRandom(n) { if (n < 1) { return "" } var rnd = ""; for (var i = 0; i < n; i++) { rnd += Math.floor(Math.random() * 10) } return rnd }; var BrowserMatch = { init: function () { this.browser = this.getBrowser().browser || "Unknown"; this.version = this.getBrowser().version || "Unknown"; this.OS = this.getOS() || "Unknown" }, getOS: function () { if (navigator.platform.indexOf("Win") != -1) return "Windows"; if (navigator.platform.indexOf("Mac") != -1) return "Mac"; if (navigator.platform.indexOf("Linux") != -1) return "Linux"; if (navigator.userAgent.indexOf("iPhone") != -1) return "iPhone/iPod" }, getBrowser: function () { var rMsie = /(msie\s|trident\/7)([\w\.]+)/; var rTrident = /(trident)\/([\w.]+)/; var rFirefox = /(firefox)\/([\w.]+)/; var rOpera = /(opera).+version\/([\w.]+)/; var rNewOpera = /(opr)\/(.+)/; var rChrome = /(chrome)\/([\w.]+)/; var rSafari = /version\/([\w.]+).*(safari)/; var ua = navigator.userAgent.toLowerCase(); var matchBS, matchBS2; matchBS = rMsie.exec(ua); if (matchBS != null) { matchBS2 = rTrident.exec(ua); if (matchBS2 != null) { switch (matchBS2[2]) { case "4.0": return { browser: "IE", version: "8" }; break; case "5.0": return { browser: "IE", version: "9" }; break; case "6.0": return { browser: "IE", version: "10" }; break; case "7.0": return { browser: "IE", version: "11" }; break; default: return { browser: "IE", version: "Undefined" } } } else { return { browser: "IE", version: matchBS[2] || "0" } } } matchBS = rFirefox.exec(ua); if ((matchBS != null) && (!(window.attachEvent)) && (!(window.chrome)) && (!(window.opera))) { return { browser: matchBS[1] || "", version: matchBS[2] || "0" } } matchBS = rOpera.exec(ua); if ((matchBS != null) && (!(window.attachEvent))) { return { browser: matchBS[1] || "", version: matchBS[2] || "0" } } matchBS = rChrome.exec(ua); if ((matchBS != null) && (!!(window.chrome)) && (!(window.attachEvent))) { matchBS2 = rNewOpera.exec(ua); if (matchBS2 == null) { return { browser: matchBS[1] || "", version: matchBS[2] || "0" } } else { return { browser: "Opera", version: matchBS2[2] || "0" } } } matchBS = rSafari.exec(ua); if ((matchBS != null) && (!(window.attachEvent)) && (!(window.chrome)) && (!(window.opera))) { return { browser: matchBS[2] || "", version: matchBS[1] || "0" } } } }; function getBrowserInfo() { return ""; BrowserMatch.init(); var browserInfo = { name: navigator.appName || "Unknown", browser: BrowserMatch.browser, version: BrowserMatch.version, os: BrowserMatch.OS, cookieEnabled: navigator.cookieEnabled || "Unknown" }; var json = JSON.stringify(browserInfo); var encode = encodeURIComponent(json); return encode }; function getPhoneRegTest(phoneNum) { var onOff = false; var regPhone1 = /^[1][1-9][0-9]{9}$/; if (!checkValIsUndefinedOrNull(phoneNum)) { if (regPhone1.test(phoneNum)) { onOff = true } } return onOff }; Date.prototype.Format = function (fmt) { var o = { "M+": this.getMonth() + 1, "d+": this.getDate(), "H+": this.getHours(), "m+": this.getMinutes(), "s+": this.getSeconds(), "q+": Math.floor((this.getMonth() + 3) / 3), "S": this.getMilliseconds() }; if (/(y+)/.test(fmt)) fmt = fmt.replace(RegExp.$1, (this.getFullYear() + "").substr(4 - RegExp.$1.length)); for (var k in o) if (new RegExp("(" + k + ")").test(fmt)) fmt = fmt.replace(RegExp.$1, (RegExp.$1.length == 1) ? (o[k]) : (("00" + o[k]).substr(("" + o[k]).length))); return fmt }; function passwordStrengthTips(newValue, StrengthBoxId, tipsId, ruo, zhong, qiang) { if (newValue.length <= 0) { $("#" + StrengthBoxId).hide(); $("#" + tipsId).html("密码不能为空！") } else if (!(/^[A-Za-z0-9~!@#$%^&*_+()]+$/.test(newValue))) { $("#" + StrengthBoxId).hide(); $("#" + tipsId).html("密码必须有数字,字母或者符号组成！") } else if (newValue.length < 6) { $("#" + StrengthBoxId).hide(); $("#" + tipsId).html("密码太短！") } else if (newValue.length > 30) { $("#" + StrengthBoxId).hide(); $("#" + tipsId).html("密码过长！") } else { $("#" + tipsId).html(""); $("#" + StrengthBoxId).show(); if (newValue.match(/^[0-9]{6,30}$|^[a-zA-Z]{6,30}$/g)) { $("#" + StrengthBoxId + " span").removeClass(); $("#" + ruo).addClass("bg_feeble"); $("#" + ruo).addClass("bg_text") } else if ((newValue.match(/^\w{6,25}$/)) || newValue.match(/^\W{6,25}$/)) { $("#" + StrengthBoxId + " span").removeClass(); $("#" + ruo + ",#" + zhong).addClass("bg_medium"); $("#" + zhong).addClass("bg_text") } else { $("#" + StrengthBoxId + " span").removeClass(); $("#" + ruo + ",#" + zhong + ",#" + qiang).addClass("bg_strong"); $("#" + qiang).addClass("bg_text") } } }; function notSelectedAfterNowData(databoxId, ageId) { $('#' + databoxId).datebox().datebox('calendar').calendar({ validator: function (date) { var now = new Date(); var d1 = new Date(now.getFullYear(), now.getMonth(), now.getDate()); return d1 >= date } }); if (ageId) { $('#' + databoxId).datebox({ onSelect: function (date) { var now = (new Date()).getFullYear(); $("#" + ageId).textbox("setText", ((now - date.getFullYear()) > 0) ? (now - date.getFullYear()) : "") } }) } }; function notSelectedBeforeNowData(databoxId) { $('#' + databoxId).datebox().datebox('calendar').calendar({ validator: function (date) { var now = new Date(); var d1 = new Date(now.getFullYear(), now.getMonth(), now.getDate()); return d1 <= date } }) }; function getRedirectUrl(url, obj) { var newUrl = ""; if (!checkValIsUndefinedOrNull(url)) { newUrl = url } if (obj != undefined && obj != null && $.isPlainObject(obj)) { var paramStr = $.param(obj); if (!checkValIsUndefinedOrNull(paramStr)) { if (url.indexOf("?") >= 0) { newUrl += "&" + paramStr } else { newUrl += "?" + paramStr } } } return newUrl }; function redirect2HtmlWithDp(url) { var dp = getUrlParam("dp"); if (checkValIsUndefinedOrNull(dp)) { if (url.indexOf("?") >= 0) { url += "&" } else { url += "?" } url += "dp" + dp } window.location.href = url }; function getProjectOriginalTitle(data, id) { if (!checkValIsUndefinedOrNull(data["审核时间"]) || data["审核"] != -1) { var settitle = ""; var html = '<div class=" gxf_problem gxf_problem_title"> <div> <h2 style="display: inline-block;"><span></span>提交本内容时的题目</h2> <sapn id="text-test" style="font-size: 12px;"class="margl"> </sapn> </div> <div style="padding: 10px;border: 1px solid #f7d0d4;background-color: #e0fcff;">'; settitle = checkValIsUndefinedOrNull(data["原课题题目"]) ? data["名称"] : data["原课题题目"]; html += '提交本内容时的题目：<strong>' + settitle + '</strong></div></div>'; $("#" + id).html(html).show() } }; function ResizeFontSize() { if (get_current_role() != 2) { if ($(".font_size_resize").length <= 0) { $("body").append('<div class="font_size_resize"><a href="javascript:;" class="size_minus" title="点击缩小字体" onclick="fontSizeResize(0)">-</a><a href="javascript:;" class="size_plus" title="点击放大字体"  onclick="fontSizeResize(1)">+</a></div>') } var getSize = window.localStorage.getItem("co-fonts-size"); $(window).resize(); if (!checkValIsUndefinedOrNull(getSize)) { $(".gxf_designTable_ResizefontSize").css("font-size", (getSize + "px")); if (getSize == 12) { $(".font_size_resize>.size_minus").hide() } } } else { $(".font_size_resize").remove() } }; function fontSizeResize(type) { if (type == 0) { $(".gxf_designTable_ResizefontSize").css("font-size", ((parseInt($(".gxf_designTable_ResizefontSize").css("font-size")) - 2) + "px")); window.localStorage.setItem("co-fonts-size", parseInt($(".gxf_designTable_ResizefontSize").css("font-size"))); $(window).resize(); if (parseInt($(".gxf_designTable_ResizefontSize").css("font-size")) <= 12) { $(".font_size_resize>.size_minus").hide(); return false } } else if (type == 1) { $(".gxf_designTable_ResizefontSize").css("font-size", ((parseInt($(".gxf_designTable_ResizefontSize").css("font-size")) + 2) + "px")); window.localStorage.setItem("co-fonts-size", parseInt($(".gxf_designTable_ResizefontSize").css("font-size"))); $(window).resize(); if (parseInt($(".gxf_designTable_ResizefontSize").css("font-size")) > 12) { $(".font_size_resize>.size_minus").show(); return false } } }; function GetDocumentFormSort(docType) { var temp = [{ 'Element': 8, 'IsShow': 1 }, { 'Element': 9, 'IsShow': 1 }]; $.ajax({ url: "../Handler/CommonHandler.ashx?action=GetDocumentFormSort&r=" + new Date().getTime(), dataType: "json", type: "POST", data: { 'docType': docType }, async: false, beforeSend: function () { open_loading() }, success: function (data) { if (data && data.isSuccess && data.rows && data.rows.length > 0) { temp = data.rows } }, error: function (err) { console.log(err) }, complete: function () { close_loading() } }); return temp };